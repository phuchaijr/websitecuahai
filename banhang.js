// M·∫£ng s·∫£n ph·∫©m m·∫´u
let products = [
  {
    id: "1",
    name: "M·∫πt b√∫n ch·∫£ si√™u ngon",
    price: 80000,
    image: "./img/bun.jpg",
    description:
      "M·∫πt b√∫n ch·∫£ l√† m·ªôt c√°ch b√†y tr√≠ m√≥n b√∫n ch·∫£ truy·ªÅn th·ªëng c·ªßa H√† N·ªôi tr√™n m·ªôt chi·∫øc m·∫πt (m√¢m tre) l√≥t l√° chu·ªëi, t·∫°o c·∫£m gi√°c d√¢n d√£, h·∫•p d·∫´n.",
  },
  {
    id: "2",
    name: "B√°nh X√®o qu·∫£ng tr·ªã",
    price: 30000,
    image: "./img/banhxeo.jpg",
    description:
      "B√°nh x√®o l√† m·ªôt m√≥n ƒÉn d√¢n d√£, ph·ªï bi·∫øn ·ªü nhi·ªÅu v√πng mi·ªÅn Vi·ªát Nam. M√≥n ƒÉn n√†y c√≥ l·ªõp v·ªè gi√≤n r·ª•m m√†u v√†ng h·∫•p d·∫´n, th∆∞·ªùng ƒë∆∞·ª£c l√†m t·ª´ b·ªôt g·∫°o pha v·ªõi n∆∞·ªõc c·ªët d·ª´a v√† ngh·ªá.",
  },
  {
    id: "3",
    name: "B√∫n b√≤ Siuu ngonn",
    price: 50000,
    image: "./img/bunbo.jpg",
    description:
      "B√∫n b√≤ l√† m·ªôt m√≥n ƒë·∫∑c s·∫£n n·ªïi ti·∫øng c·ªßa Hu·∫ø v·ªõi h∆∞∆°ng v·ªã ƒë·∫≠m ƒë√†, cay nh·∫π v√† th∆°m n·ª©c m≈©i.",
  },
  {
    id: "4",
    name: "Toboki",
    price: 100000000,
    image: "./img/toboki.jpg",
  },
];
let otherProducts = [
  {
    id: "101",
    name: "N·∫°n nh√¢n Lanh",
    price: 3000001,
    image: "./img/lanh.jpg",
    description:
      "ƒê√¢y l√† n·∫°n nh√¢n ch·ªß m∆∞u th√†nh nh√≥m 11 ƒë·ª©a zui gke x·ª©ng ƒë√°ng b√°n qua cam vs gi√° n√†y",
  },
  {
    id: "102",
    name: "N·∫°n nh√¢n B√¨nh b√≤",
    price: 2999999,
    image: "./img/binh.jpg",
    description:
      "v·ªõi m·ªôt b·ª©c ·∫£nh s√°t th·ªß ƒë·∫ßy nguy hi·ªÉm ƒë·ªëi t∆∞·ª£ng n√†y c√≥ th·ªÉ b·∫≠t c·∫£ l√≥c c≈©ng x·ª©ng ƒë√°ng gi√° ∆∞u ƒë√£i",
  },
  {
    id: "103",
    name: "N·∫°n nh√¢n VƒÉn √Ω",
    price: 30000000,
    image: "./img/y.jpg",
    description:
      "N·∫°n nh√¢n n√†y v·ªõi 1 khu√¥n m·∫∑t tr·∫ª con d·ªÖ ƒÉn hi·∫øp c√≥ m·ª©c gi√° kh√° cao.",
  },
  {
    id: "104",
    name: "N·∫°n nh√¢n VƒÉn Ph√∫c",
    price: 3000000,
    image: "./img/vphuc.jpg",
    description:
      "N·∫°n nh√¢n n√†y v·ªõi 1 khu√¥n m·∫∑t tr·∫ª con d·ªÖ ƒÉn hi·∫øp c√≥ m·ª©c gi√° kh√° cao.",
  },
  {
    id: "105",
    name: "N·∫°n nh√¢n T·∫•n T√†i",
    price: 20000000,
    image: "./img/tai.jpg",
    description:
      "N·∫°n nh√¢n n√†y v·ªõi 1 khu√¥n m·∫∑t c√≥ 2 m√° h·ªìng 2 b√™n c√≥ kh·∫£ nƒÉng qua cam s·∫Ω c√¢n ƒëc m·∫•y a b√™n ·∫•y c≈©ng c√≥ gi√° r·∫•t cao.",
  },
  {
    id: "106",
    name: "N·∫°n nh√¢n Ho√†i Th∆°m",
    price: 20000000,
    image: "./img/thom.jpg",
    description:
      "N·∫°n nh√¢n n√†y v·ªõi n·∫°n nh√¢n t·∫•n t√†i ƒë·ªìng gi√° nhau v√¨ c√≥ kh·∫£ nƒÉng h·ª£p  t√°c t·ªët.",
  },
  {
    id: "107",
    name: "N·∫°n nh√¢n Thu Th·ªßy",
    price: 300000000,
    image: "./img/thuy.jpg",
    description:
      "N·∫°n nh√¢n n√†y gi√° r·∫•t cao ch√∫ng ta ph·∫£i b√°n nh√† m·ªõi mua ƒë∆∞·ª£c n·∫°n nh√¢n vip n√†y v√¨ 1 l√Ω do ch√≠nh l√† ' NG∆Ø·ªúI ·∫§YYYYYYYY'.",
  },
  {
    id: "108",
    name: "N·∫°n nh√¢n Tuy·∫øt M√¢y",
    price: 2999990,
    image: "./img/tmay.jpg",
    description:
      "N·∫°n nh√¢n n√†y kh√¥ng c√≥ ·∫£nh d√¨m n√™n b√°n sang cam v·ªõi m·ª©c gi√° si√™u r·∫ª.",
  },
  {
    id: "109",
    name: "N·∫°n nh√¢n Tr√† My",
    price: 3000000,
    image: "./img/tmy.jpg",
    description:
      "N·∫°n nh√¢n n√†y th√¨ c√≥ gi√° ngang v·ªõi n·∫°n nh√¢n lanh b·ªüi ƒëi v·ªõi nan nh√¢n lanh l√¢y nhi·ªÉm r·∫•t n·∫∑ng .",
  },
  {
    id: "110",
    name: "N·∫°n nh√¢n Quang Hu·ª≥nh",
    price: 400000000,
    image: "./img/tinh.jpg",
    description:
      "N·∫°n nh√¢n n√†y v·ªõi 1 khu√¥n m·∫∑t r·∫•t chi l√† ƒë·∫πp g√°i khi·∫øn m·∫•y anh b√™n cam m√™ m·∫´n v√† c√≥ kh·∫£ nƒÉng cao ƒë√°p ·ª©ng nhu c·∫ßu c·ªßa m·∫•y anh ·∫•y v√† c√≥ gi√° r·∫•t cao.",
  },
];

// M·∫£ng gi·ªè h√†ng
let cart = [];

// H√†m hi·ªÉn th·ªã gi·ªè h√†ng
function updateCartDisplay() {
  const cartCount = document.getElementById("cart-count");
  const cartItems = document.getElementById("cart-items");

  // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng gi·ªè h√†ng
  cartCount.textContent = cart.length;

  // X√≥a danh s√°ch gi·ªè h√†ng c≈©
  cartItems.innerHTML = "";

  // Th√™m c√°c s·∫£n ph·∫©m v√†o gi·ªè h√†ng
  cart.forEach((item, index) => {
    const listItem = document.createElement("li");
    listItem.innerHTML = `
            ${item.name} - ${item.price.toLocaleString()}ƒë
            <div class="quantity-btns">
                <button onclick="decreaseQuantity(${index})">-</button>
                <span>${item.quantity}</span>
                <button onclick="increaseQuantity(${index})">+</button>
            </div>
            <button onclick="removeFromCart(${index})">X</button>
        `;
    cartItems.appendChild(listItem);
  });
}

// H√†m th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
function addToCart(id, name, price) {
  const existingProductIndex = cart.findIndex((product) => product.id === id);

  if (existingProductIndex !== -1) {
    cart[existingProductIndex].quantity++;
  } else {
    const product = { id, name, price, quantity: 1 };
    cart.push(product);
  }

  updateCartDisplay();
}

// H√†m tƒÉng s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
function increaseQuantity(index) {
  cart[index].quantity++;
  updateCartDisplay();
}

// H√†m gi·∫£m s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
function decreaseQuantity(index) {
  if (cart[index].quantity > 1) {
    cart[index].quantity--;
  } else {
    removeFromCart(index);
  }
  updateCartDisplay();
}

// H√†m x√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
function removeFromCart(index) {
  cart.splice(index, 1);
  updateCartDisplay();
}

// H√†m hi·ªÉn th·ªã chi ti·∫øt s·∫£n ph·∫©m trong modal
function viewProduct(id) {
  const product = products.find((p) => p.id == id);
  if (!product) return;

  document.getElementById("modal-product-name").textContent = product.name;
  document.getElementById("modal-product-image").src = product.image;
  document.getElementById(
    "modal-product-price"
  ).textContent = `Gi√°: ${product.price.toLocaleString()}ƒë`;
  document.getElementById("modal-product-description").textContent =
    product.description;

  document.getElementById("product-modal").style.display = "flex";
  document.getElementById("add-to-cart-modal-btn").onclick = () => {
    addToCart(product.id, product.name, product.price);
    document.getElementById("product-modal").style.display = "none";
  };
}

// ƒê√≥ng modal
document.getElementById("close-modal-btn").addEventListener("click", () => {
  document.getElementById("product-modal").style.display = "none";
});

// M·ªü gi·ªè h√†ng
document.getElementById("cart-btn").addEventListener("click", () => {
  document.getElementById("cart").style.display = "block";
});

// ƒê√≥ng gi·ªè h√†ng
document.getElementById("close-cart-btn").addEventListener("click", () => {
  document.getElementById("cart").style.display = "none";
});

// Hi·ªÉn th·ªã s·∫£n ph·∫©m khi trang web ƒë∆∞·ª£c t·∫£i
window.onload = function () {
  displayProducts();
};

// Hi·ªÉn th·ªã c√°c s·∫£n ph·∫©m
function displayProducts() {
  const productList = document.getElementById("product-list");

  if (!productList) {
    console.error("Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ 'product-list'.");
    return;
  }

  products.forEach((product) => {
    const productDiv = document.createElement("div");
    productDiv.classList.add("product");
    productDiv.innerHTML = `
            <img src="${product.image}" alt="${product.name}">
            <h3>${product.name}</h3>
            <p>Gi√°: ${product.price.toLocaleString()}ƒë</p>
            <button onclick="addToCart('${product.id}', '${product.name}', ${
      product.price
    })">Th√™m v√†o gi·ªè</button>
            <button class="view-item" onclick="viewProduct('${
              product.id
            }')">Xem m·∫∑t h√†ng</button>
        `;
    productList.appendChild(productDiv);
  });
}
// X·ª≠ l√Ω khi b·∫•m n√∫t Thanh to√°n
document.getElementById("checkout-btn").addEventListener("click", function () {
  if (cart.length === 0) {
    alert("Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng!");
    return;
  }

  alert("Thanh to√°n th√†nh c√¥ng! C·∫£m ∆°n b·∫°n ƒë√£ mua h√†ng üéâ");

  // X√≥a to√†n b·ªô gi·ªè h√†ng sau khi thanh to√°n
  cart = [];
  updateCartDisplay();

  // ·∫®n gi·ªè h√†ng sau khi thanh to√°n
  document.getElementById("cart").style.display = "none";
});
// Hi·ªÉn th·ªã c√°c s·∫£n ph·∫©m kh√°c (other products)
function displayOtherProducts() {
  const otherProductList = document.getElementById("other-product-list");

  if (!otherProductList) {
    console.error("Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ 'other-product-list'.");
    return;
  }

  otherProducts.forEach((product) => {
    const productDiv = document.createElement("div");
    productDiv.classList.add("product");
    productDiv.innerHTML = `
        <img src="${product.image}" alt="${product.name}">
        <h3>${product.name}</h3>
        <p>Gi√°: ${product.price.toLocaleString()}ƒë</p>
        <button onclick="addToCart('${product.id}', '${product.name}', ${
      product.price
    })">Th√™m v√†o gi·ªè</button>
        <button class="view-item" onclick="viewProduct('${
          product.id
        }')">Xem m·∫∑t h√†ng</button>
      `;
    otherProductList.appendChild(productDiv);
  });
}
// Hi·ªÉn th·ªã c√°c s·∫£n ph·∫©m kh√°c (other products)
function displayOtherProducts() {
  const otherProductList = document.getElementById("other-product-list");

  if (!otherProductList) {
    console.error("Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ 'other-product-list'.");
    return;
  }

  otherProducts.forEach((product) => {
    const productDiv = document.createElement("div");
    productDiv.classList.add("product");
    productDiv.innerHTML = `
        <img src="${product.image}" alt="${product.name}">
        <h3>${product.name}</h3>
        <p>Gi√°: ${product.price.toLocaleString()}ƒë</p>
        <button onclick="addToCart('${product.id}', '${product.name}', ${
      product.price
    })">Th√™m v√†o gi·ªè</button>
        <button class="view-item" onclick="viewProduct('${
          product.id
        }')">Xem m·∫∑t h√†ng</button>
      `;
    otherProductList.appendChild(productDiv);
  });
}
// H√†m hi·ªÉn th·ªã chi ti·∫øt s·∫£n ph·∫©m trong modal
function viewProduct(id) {
  // T√¨m s·∫£n ph·∫©m trong m·∫£ng products v√† otherProducts
  let product =
    products.find((p) => p.id == id) || otherProducts.find((p) => p.id == id);

  if (!product) return;

  document.getElementById("modal-product-name").textContent = product.name;
  document.getElementById("modal-product-image").src = product.image;
  document.getElementById(
    "modal-product-price"
  ).textContent = `Gi√°: ${product.price.toLocaleString()}ƒë`;
  document.getElementById("modal-product-description").textContent =
    product.description || "M√¥ t·∫£ ch∆∞a c√≥";

  document.getElementById("product-modal").style.display = "flex";
  document.getElementById("add-to-cart-modal-btn").onclick = () => {
    addToCart(product.id, product.name, product.price);
    document.getElementById("product-modal").style.display = "none";
  };
}

// ƒê√≥ng modal
document.getElementById("close-modal-btn").addEventListener("click", () => {
  document.getElementById("product-modal").style.display = "none";
});

// Hi·ªÉn th·ªã c√°c s·∫£n ph·∫©m khi trang web ƒë∆∞·ª£c t·∫£i
window.onload = function () {
  displayProducts(); // Hi·ªÉn th·ªã s·∫£n ph·∫©m ch√≠nh
  displayOtherProducts(); // Hi·ªÉn th·ªã s·∫£n ph·∫©m kh√°c
};
function updateCartDisplay() {
  const cartCount = document.getElementById("cart-count");
  const cartItems = document.getElementById("cart-items");
  const totalPriceElement = document.getElementById("total-price"); // L·∫•y ph·∫ßn t·ª≠ hi·ªÉn th·ªã t·ªïng ti·ªÅn

  // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng gi·ªè h√†ng
  cartCount.textContent = cart.length;

  // X√≥a danh s√°ch gi·ªè h√†ng c≈©
  cartItems.innerHTML = "";

  let totalPrice = 0; // Bi·∫øn l∆∞u t·ªïng ti·ªÅn

  // Th√™m c√°c s·∫£n ph·∫©m v√†o gi·ªè h√†ng
  cart.forEach((item, index) => {
    totalPrice += item.price * item.quantity; // C·ªông d·ªìn t·ªïng ti·ªÅn

    const listItem = document.createElement("li");
    listItem.innerHTML = `
            ${item.name} - ${item.price.toLocaleString()}ƒë
            <div class="quantity-btns">
                <button onclick="decreaseQuantity(${index})">-</button>
                <span>${item.quantity}</span>
                <button onclick="increaseQuantity(${index})">+</button>
            </div>
            <button onclick="removeFromCart(${index})">X</button>
        `;
    cartItems.appendChild(listItem);
  });

  // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn v√†o ph·∫ßn t·ª≠ HTML
  totalPriceElement.textContent = `T·ªïng ti·ªÅn: ${totalPrice.toLocaleString()}ƒë`;
}
